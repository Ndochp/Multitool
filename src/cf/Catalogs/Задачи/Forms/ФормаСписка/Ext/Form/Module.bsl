&НаКлиенте
Перем ПредТекущаяЗадача;

&НаКлиенте
Процедура Группа1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.грСтруктура Тогда
		// Считаем, что перешли из туду
		ЗадачаИзТуду = Элементы.ТудуСписок.ТекущаяСтрока;
		Если ЗадачаИзТуду <> Неопределено Тогда
			Элементы.Список.ТекущаяСтрока = ЗадачаИзТуду;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СменаТекущейЗадачи() Экспорт 
	ТекущаяЗадача = ПредТекущаяЗадача;
	ПодключитьОбработчикОжидания("СменаТекущейЗадачиВтораяВолна", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СменаТекущейЗадачиВтораяВолна() Экспорт 
	ТекущаяЗадачаИнтерактивноеОписание = СтрШаблон("<html><body>%1</body></html>", Элементы.ТекущаяЗадачаОписаниеЗадачи.ТекстРедактирования);
КонецПроцедуры


&НаКлиенте
Процедура СписокЗадачПриАктивизацииСтроки(Элемент)
	ПредТекущаяЗадача = Элемент.ТекущаяСтрока;
	ПодключитьОбработчикОжидания("СменаТекущейЗадачи", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ИнтерактивноеОписаниеПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Ссылка = "";
	Если ДанныеСобытия.Свойство("href", Ссылка) Тогда
		Если ЗначениеЗаполнено(Ссылка) Тогда
			СтандартнаяОбработка = Ложь;
			ПерейтиПоНавигационнойСсылке(Ссылка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("УстановитьНовоеВремяВЗапросе",5*60);
КонецПроцедуры


&НаКлиенте
Процедура УстановитьНовоеВремяВЗапросе()
    ТудуСписок.Параметры.УстановитьЗначениеПараметра("ДатаНачала",ТекущаяДата());
КонецПроцедуры